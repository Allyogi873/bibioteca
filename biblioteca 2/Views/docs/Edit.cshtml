@model biblioteca_2.Models.docs

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/View.cshtml";
}

<h2>Editar Libro</h2>


@using (Html.BeginForm("edit", "docs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id_archivo)

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.autor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.autor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.autor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row form-group">
        <b class="control-label col-md-2">Documento actual</b>
        <div class="col-md-10">
            @if (Model.dir_archivo != "" && Model.dir_archivo != null)
            {
            
                <a href="~/subidas/archivos/@Model.dir_archivo" target="_blank" class="btn btn-warning">Ver Libro</a>

            }
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2"><label>Nuevo Documento</label></div>
        <input type="file" accept=".pdf" name="foto">
        @Html.ValidationMessageFor(model => model.dir_archivo, "El Documentod deve tener un nombre mayor de 5 caracteres y menor de 20", new { @class = "text-danger" })
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Categoria", String.Empty)
                @Html.ValidationMessageFor(model => model.categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <i class="fa fa-arrow-left" aria-hidden="true"><b>@Html.ActionLink("Volver a la Lista", "Index")</b></i>
   
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
